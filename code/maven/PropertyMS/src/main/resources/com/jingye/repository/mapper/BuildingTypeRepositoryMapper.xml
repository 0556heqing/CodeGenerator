<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingye.repository.BuildingTypeRepository">

    <!-- 数据库字段 -->
    <sql id="buildingTypeFields">
        id
        , bt_note
        , bt_name
        , bt_room_number
    </sql>

    <!-- 对象属性 -->
    <parameterMap id="buildingTypeParameterMap" type="com.jingye.entity.BuildingType">
        <parameter property="id"/>
        <parameter property="btNote"/>
        <parameter property="btName"/>
        <parameter property="btRoomNumber"/>
    </parameterMap>

    <!-- 数据库字段与对象属性映射 -->
    <resultMap id="buildingTypeResultMap" type="com.jingye.entity.BuildingType">
        <result property="id" column="id" />
        <result property="btNote" column="bt_note" />
        <result property="btName" column="bt_name" />
        <result property="btRoomNumber" column="bt_room_number" />
    </resultMap>

    <!-- 增加 -->
    <insert id="saveBuildingType" parameterMap="buildingTypeParameterMap" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
          building_type( <include refid="buildingTypeFields"/> )
        VALUES ( ? , ? , ? , ?);
    </insert>

    <!-- 增加多条 -->
    <insert id="saveBatchBuildingType" parameterType="java.util.List">
        INSERT INTO
          building_type( <include refid="buildingTypeFields"/> )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
              #{item.id}
              ,#{item.btNote}
              ,#{item.btName}
              ,#{item.btRoomNumber}
            )
        </foreach>
        ;
    </insert>

    <!-- 获取所有 -->
    <select id="listBuildingType" resultMap="buildingTypeResultMap">
        SELECT
          <include refid="buildingTypeFields"/>
        FROM building_type
        ORDER BY
           id DESC    </select>

    <!-- 根据条件获取多条 -->
    <select id="listBuildingTypeByParam" parameterType="java.util.Map" resultMap="buildingTypeResultMap">
        SELECT
          <include refid="buildingTypeFields"/>
        FROM building_type
        <where>
           <if test="id != null and id != ''"> AND id=#{id} </if>
           <if test="btNote != null and btNote != ''"> AND bt_note=#{btNote} </if>
           <if test="btName != null and btName != ''"> AND bt_name=#{btName} </if>
           <if test="btRoomNumber != null and btRoomNumber != ''"> AND bt_room_number=#{btRoomNumber} </if>
        </where>
        ORDER BY
           id DESC    </select>

    <!-- 根据条件删除多条 -->
    <delete id="deleteBuildingTypeByParam" parameterMap="buildingTypeParameterMap">
        DELETE FROM building_type
        <where>
          <if test="id != null and id != ''"> AND id=#{id} </if>
          <if test="btNote != null and btNote != ''"> AND bt_note=#{btNote} </if>
          <if test="btName != null and btName != ''"> AND bt_name=#{btName} </if>
          <if test="btRoomNumber != null and btRoomNumber != ''"> AND bt_room_number=#{btRoomNumber} </if>
        </where>
        ;
    </delete>


    <!-- 根据主键修改 -->
    <update id="updateBuildingTypeByKey" parameterMap="buildingTypeParameterMap">
        UPDATE
          building_type
        <trim prefix="SET" prefixOverrides=",">
          <if test="id != null">, id=#{id}</if>
          <if test="btNote != null">, bt_note=#{btNote}</if>
          <if test="btName != null">, bt_name=#{btName}</if>
          <if test="btRoomNumber != null">, bt_room_number=#{btRoomNumber}</if>
        </trim>
        <where>
          AND id=#{id}
        </where>
        ;
    </update>

    <!-- 根据主键获取 -->
    <select id="getBuildingTypeByKey" parameterType="java.util.Map" resultMap="buildingTypeResultMap">
        SELECT
          <include refid="buildingTypeFields"/>
        FROM building_type
        <where>
          AND id=#{id}
        </where>
    </select>

    <!-- 根据主键删除 -->
    <delete id="deleteBuildingTypeByKey" parameterType="java.util.Map">
        DELETE FROM building_type
        <where>
          AND id=#{id}
        </where>
        ;
    </delete>

    <!-- 根据多个主键删除多条 -->
    <delete id="deleteBatchBuildingTypeByKey" parameterType="java.util.List">
        DELETE FROM building_type
          WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
        ;
    </delete>

    <!-- 根据多个主键获取 -->
    <select id="listBuildingTypeByKey" parameterType="java.util.List" resultMap="buildingTypeResultMap">
        SELECT <include refid="buildingTypeFields"/>
        FROM building_type
        WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

</mapper>