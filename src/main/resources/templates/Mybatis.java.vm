package $!{classPackage}.repository;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import java.util.List;

import $!{classPackage}.entity.$!{className};

/**
 * $!{comment}数据持久层接口
 *
 * @author $!{authorName}
 * @email  $!{authorEmail}
 * @date   $!{createTime}
 */
@Mapper
public interface $!{className}Repository {

    /**
     * 增加$!{comment}
     *
     * @param $!{entityName} $!{comment}列
     * @return int 成功数量
     */
    int save$!{className}($!{className} $!{entityName});

    /**
     * 增加多条$!{comment}
     *
     * @param $!{entityName}List 多条$!{comment}列
     * @return int 成功数量
     */
    int saveBatch$!{className}(List<$!{className}> $!{entityName}List);

#if($keyFields.size() > 0)
    /**
     * 根据主键删除$!{comment}
     *
#foreach(${field} in ${keyFields})
     * @param $!{field.entityName} $!{field.comment}
#end
     * @return int 成功数量
     */
    int delete$!{className}ByKey(#foreach(${field} in ${keyFields})#if($velocityCount == 1)@Param("$!{field.entityName}")$!{field.type} $!{field.entityName}#else, @Param("$!{field.entityName}")$!{field.type} $!{field.entityName}#end#end);

#end
#if($keyFields.size() == 1)
    /**
     * 根据多个主键删除多条$!{comment}
     *
     * @param #foreach(${field} in ${keyFields})$!{field.entityName}s#end  $!{comment}列集合
     * @return int 成功数量
     */
    int deleteBatch$!{className}ByKey(#foreach(${field} in ${keyFields})List<$!{field.type}> $!{field.entityName}s#end);

#end
    /**
     * 根据条件删除多条$!{comment}
     *
     * @param $!{entityName} $!{comment}列:做条件删除使用
     * @return int 成功数量
     */
    int deleteBatch$!{className}ByParam($!{className} $!{entityName});

#if($keyFields.size() > 0)
    /**
     * 根据主键修改$!{comment}
     *
     * @param $!{entityName} $!{comment}列信息
     * @return int 成功数量
     */
    int update$!{className}ByKey($!{className} $!{entityName});

#if($!{frame.serviceFrame} == "SPRINGBOOT")
    /**
     * 根据多个主键批量修改$!{comment}
     *
     * @param $!{entityName}List 多条$!{comment}列信息
     * @return int 是否成功
     */
    int updateBatch$!{className}ByKey(List<$!{className}> $!{entityName}List);

#end
    /**
     * 根据主键获取$!{comment}
     *
#foreach(${field} in ${keyFields})
     * @param $!{field.entityName} $!{field.comment}
#end
     * @return $!{className} $!{comment}信息
     */
     $!{className} get$!{className}ByKey(#foreach(${field} in ${keyFields})#if($velocityCount == 1)@Param("$!{field.entityName}")$!{field.type} $!{field.entityName}#else, @Param("$!{field.entityName}")$!{field.type} $!{field.entityName}#end#end);

#end
#if($keyFields.size() == 1)
    /**
     * 根据多个主键获取$!{comment}
     *
     * @param #foreach(${field} in ${keyFields})$!{field.entityName}s#end  $!{comment}列集合
     * @return List<T> $!{comment}列实体信息
     */
    List<$!{className}> list$!{className}ByKey(#foreach(${field} in ${keyFields})List<$!{field.type}> $!{field.entityName}s#end);

#end
    /**
     * 获取所有$!{comment}
     *
     * @return List<$!{className}> $!{comment}主键集合
     */
    List<$!{className}> list$!{className}();

    /**
     * 根据条件获取多条$!{comment}
     *
     * @param $!{entityName} $!{comment}列:做条件查询使用
     * @return List<$!{className}> $!{comment}列集合
     */
    List<$!{className}> list$!{className}ByParam($!{className} $!{entityName});

}
