package $!{classPackage}.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Date;

import com.alibaba.fastjson.JSON;

import $!{classPackage}.entity.$!{className};
#if($keyFields.size() > 1)
import $!{classPackage}.entity.$!{className}PK;
#end
import $!{classPackage}.service.$!{className}Service;
import $!{classPackage}.util.PageInfoUtil;

import org.springframework.transaction.annotation.Transactional;
#if($!{frame.serviceFrame} == "SPRINGBOOT")
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
#elseif($!{frame.serviceFrame} == "SPRING")
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
#end

/**
 * $!{comment}数据持久层接口
 *
 * @author $!{authorName}
 * @email  $!{authorEmail}
 * @date   $!{createTime}
 */
#if($!{frame.serviceFrame} == "SPRINGBOOT")
@RunWith(SpringRunner.class)
@SpringBootTest
#elseif($!{frame.serviceFrame} == "SPRING")
@RunWith(SpringJUnit4ClassRunner.class)		// 表示继承了 SpringJUnit4ClassRunner 类
@ContextConfiguration(locations = {"classpath*:spring_core.xml","classpath:spring_hibernate.xml"})
#end
public class $!{className}Test {

    @Autowired
    $!{className}Service $!{entityName}Service;

#if($keyFields.size() > 1)
    public $!{className}PK create$!{className}PK(int create){
        $!{className}PK $!{entityName}PK = new $!{className}PK();
#foreach ($!{field} in $!{keyFields})
#if($!{field.type} == "String")
        $!{entityName}PK.set$!{field.filedName}(create+"");
#elseif($!{field.type} == "Date")
        $!{entityName}PK.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}PK.set$!{field.filedName}(create);
#elseif($!{field.type} == "Long")
        $!{entityName}PK.set$!{field.filedName}(create+0L);
#elseif($!{field.type} == "Float")
        $!{entityName}PK.set$!{field.filedName}(create+0F);
#elseif($!{field.type} == "Double")
        $!{entityName}PK.set$!{field.filedName}(create+0D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}PK.set$!{field.filedName}(new java.math.BigDecimal(create));
#end
#end
        return $!{entityName}PK;
    }
#end

    public $!{className} create$!{className}(int create) {
        $!{className} $!{entityName} = new $!{className}();
#if($keyFields.size() > 1)
        $!{className}PK $!{entityName}PK = new $!{className}PK();
#foreach ($!{field} in $!{keyFields})
#if($!{field.type} == "String")
        $!{entityName}PK.set$!{field.filedName}(create+"");
#elseif($!{field.type} == "Date")
        $!{entityName}PK.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}PK.set$!{field.filedName}(create);
#elseif($!{field.type} == "Long")
        $!{entityName}PK.set$!{field.filedName}(create+0L);
#elseif($!{field.type} == "Float")
        $!{entityName}PK.set$!{field.filedName}(create+0F);
#elseif($!{field.type} == "Double")
        $!{entityName}PK.set$!{field.filedName}(create+0D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}PK.set$!{field.filedName}(new java.math.BigDecimal(create));
#end
#end
        $!{entityName}.set$!{className}PK($!{entityName}PK);
#else
#if($!{keyFields.get(0).type} == "String")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+"");
#elseif($!{keyFields.get(0).type} == "Date")
        $!{entityName}.set$!{keyFields.get(0).filedName}(new Date());
#elseif($!{keyFields.get(0).type} == "Integer")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create);
#elseif($!{keyFields.get(0).type} == "Long")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+0L);
#elseif($!{keyFields.get(0).type} == "Float")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+0F);
#elseif($!{keyFields.get(0).type} == "Double")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+0D);
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        $!{entityName}.set$!{keyFields.get(0).filedName}(new java.math.BigDecimal(create));
#end
#end
#foreach ($!{field} in $!{noKeyFields})
#if($!{field.type} == "String")
        $!{entityName}.set$!{field.filedName}(create+"");
#elseif($!{field.type} == "Date")
        $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}.set$!{field.filedName}(create);
#elseif($!{field.type} == "Long")
        $!{entityName}.set$!{field.filedName}(create+0L);
#elseif($!{field.type} == "Float")
        $!{entityName}.set$!{field.filedName}(create+0F);
#elseif($!{field.type} == "Double")
        $!{entityName}.set$!{field.filedName}(create+0D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(create));
#end
#end
        return $!{entityName};
    }

    public $!{className} update$!{className}(int create, int update) {
        $!{className} $!{entityName} = new $!{className}();
#if($keyFields.size() > 1)
        $!{className}PK $!{entityName}PK = new $!{className}PK();
#foreach ($!{field} in $!{keyFields})
#if($!{field.type} == "String")
        $!{entityName}PK.set$!{field.filedName}(create+"");
#elseif($!{field.type} == "Date")
        $!{entityName}PK.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}PK.set$!{field.filedName}(create);
#elseif($!{field.type} == "Long")
        $!{entityName}PK.set$!{field.filedName}(create+0L);
#elseif($!{field.type} == "Float")
        $!{entityName}PK.set$!{field.filedName}(create+0F);
#elseif($!{field.type} == "Double")
        $!{entityName}PK.set$!{field.filedName}(create+0D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}PK.set$!{field.filedName}(new java.math.BigDecimal(create));
#end
#end
        $!{entityName}.set$!{className}PK($!{entityName}PK);
#else
#if($!{keyFields.get(0).type} == "String")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+update+"");
#elseif($!{keyFields.get(0).type} == "Date")
        $!{entityName}.set$!{keyFields.get(0).filedName}(new Date());
#elseif($!{keyFields.get(0).type} == "Integer")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+update);
#elseif($!{keyFields.get(0).type} == "Long")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+update+0L);
#elseif($!{keyFields.get(0).type} == "Float")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+update+0F);
#elseif($!{keyFields.get(0).type} == "Double")
        $!{entityName}.set$!{keyFields.get(0).filedName}(create+update+0D);
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        $!{entityName}.set$!{keyFields.get(0).filedName}(new java.math.BigDecimal(create+update));
#end
#end
#foreach ($!{field} in $!{noKeyFields})
#if($!{field.type} == "String")
        $!{entityName}.set$!{field.filedName}(create+update+"");
#elseif($!{field.type} == "Date")
        $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}.set$!{field.filedName}(create+update);
#elseif($!{field.type} == "Long")
        $!{entityName}.set$!{field.filedName}(create+update+0L);
#elseif($!{field.type} == "Float")
        $!{entityName}.set$!{field.filedName}(create+update+0F);
#elseif($!{field.type} == "Double")
        $!{entityName}.set$!{field.filedName}(create+update+0D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(create+update));
#end
#end
        return $!{entityName};
    }

    @Test
    public void testSave$!{className}() {
        System.out.println("-->"+$!{entityName}Service.save$!{className}(create$!{className}(1)));
    }

    @Test
    public void testSaveBatch$!{className}() {
        List<$!{className}> $!{entityName}List = new ArrayList<>();
        for(int i=2; i<5; i++) {
            $!{entityName}List.add(create$!{className}(i));
        }
        System.out.println("-->"+$!{entityName}Service.saveBatch$!{className}($!{entityName}List));
    }

    @Test
    @Transactional
    public void testList$!{className}() {
        System.out.println("-->"+$!{entityName}Service.list$!{className}());
    }

    @Test
    @Transactional
    public void testList$!{className}ByPage() {
        System.out.println("-->"+$!{entityName}Service.list$!{className}(1, 2));
    }

#foreach ($!{field} in $!{noKeyFields})
#if($!{field.type} != "Date")
    @Test
    @Transactional
    public void testFindBy$!{field.filedName}() {
        System.out.println("-->"+$!{entityName}Service.findBy$!{field.filedName}(
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
        ));
    }

    @Test
    @Transactional
    public void testFindBy$!{field.filedName}Contains() {
        System.out.println("-->"+$!{entityName}Service.findBy$!{field.filedName}Contains(
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
            , 1, 2));
    }

    @Test
    public void testDeleteBy$!{field.filedName}() {
        System.out.println("-->"+$!{entityName}Service.deleteBy$!{field.filedName}(
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
        ));
    }
#end
#end

#if($keyFields.size() > 0)
    @Test
    public void testUpdate$!{className}ByKey() {
        System.out.println("-->"+$!{entityName}Service.update$!{className}ByKey(update$!{className}(1, 5)));
    }

    @Test
    public void testUpdateBatch$!{className}ByKey() {
        List<$!{className}> $!{entityName}List = new ArrayList<>();
        for(int i=2; i<5; i++) {
            $!{entityName}List.add(update$!{className}(i, 5));
        }
        System.out.println("-->"+$!{entityName}Service.updateBatch$!{className}ByKey($!{entityName}List));
    }
#end

#if($keyFields.size() > 1)
    @Test
    @Transactional
    public void testGet$!{className}ByKey() {
        System.out.println("-->"+$!{entityName}Service.get$!{className}ByKey(create$!{className}PK(1)));
    }

    @Test
    @Transactional
    public void testList$!{className}ByKey() {
        List<$!{className}PK> $!{entityName}PKList = new ArrayList<>();
        $!{entityName}PKList.add(create$!{className}PK(1));
        $!{entityName}PKList.add(create$!{className}PK(2));
        System.out.println("-->"+$!{entityName}Service.list$!{className}ByKey($!{entityName}PKList));
    }

    @Test
    public void testDelete$!{className}ByKey() {
        System.out.println("-->"+$!{entityName}Service.delete$!{className}ByKey(create$!{className}PK(1)));
    }

    @Test
    public void testDeleteBatch$!{className}ByKey() {
        List<$!{className}PK> $!{entityName}PKList = new ArrayList<>();
        $!{entityName}PKList.add(create$!{className}PK(1));
        $!{entityName}PKList.add(create$!{className}PK(2));
        System.out.println("-->"+$!{entityName}Service.deleteBatch$!{className}ByKey($!{entityName}PKList));
    }
#end

#if($keyFields.size() == 1)
    @Test
    @Transactional
    public void testGet$!{className}ByKey() {
        #if($!{keyFields.get(0).type} == "String")
            String $!{entityName}PK = "1";
        #elseif($!{keyFields.get(0).type} == "Date")
            Date $!{entityName}PK = new Date();
        #elseif($!{keyFields.get(0).type} == "Integer")
            int $!{entityName}PK = 1;
        #elseif($!{keyFields.get(0).type} == "Long")
            long $!{entityName}PK = 1L;
        #elseif($!{keyFields.get(0).type} == "Float")
            float $!{entityName}PK = 1F;
        #elseif($!{keyFields.get(0).type} == "Double")
            double $!{entityName}PK = 1D;
        #elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
            java.math.BigDecimal $!{entityName}PK = new java.math.BigDecimal(1);
        #end
        System.out.println("-->"+$!{entityName}Service.get$!{className}ByKey($!{entityName}PK));
    }

    @Test
    @Transactional
    public void testList$!{className}ByKey() {
#if($!{keyFields.get(0).type} == "String")
        List<String> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add("1");
        $!{entityName}PKs.add("2");
#elseif($!{keyFields.get(0).type} == "Integer")
        List<Integer> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(1);
        $!{entityName}PKs.add(2);
#elseif($!{keyFields.get(0).type} == "Long")
        List<Long> ids = new ArrayList<>();
        $!{entityName}PKs.add(1L);
        $!{entityName}PKs.add(2L);
#elseif($!{keyFields.get(0).type} == "Float")
        List<Float> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(1F);
        $!{entityName}PKs.add(2F);
#elseif($!{keyFields.get(0).type} == "Double")
        List<Double> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(1D);
        $!{entityName}PKs.add(2D);
#elseif($!{keyFields.get(0).type} == "Date")
        List<Date> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(new Date());
        $!{entityName}PKs.add(new Date());
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        List<java.math.BigDecimal> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add( new java.math.BigDecimal(1));
        $!{entityName}PKs.add( new java.math.BigDecimal(2));
#end
        System.out.println("-->"+$!{entityName}Service.list$!{className}ByKey($!{entityName}PKs));
    }

    @Test
    public void testDelete$!{className}ByKey() {
#if($!{keyFields.get(0).type} == "String")
        String $!{entityName}PK = "1";
#elseif($!{keyFields.get(0).type} == "Date")
        Date $!{entityName}PK = new Date();
#elseif($!{keyFields.get(0).type} == "Integer")
        int $!{entityName}PK = 1;
#elseif($!{keyFields.get(0).type} == "Long")
        long $!{entityName}PK = 1L;
#elseif($!{keyFields.get(0).type} == "Float")
        float $!{entityName}PK = 1F;
#elseif($!{keyFields.get(0).type} == "Double")
        double $!{entityName}PK = 1D;
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        java.math.BigDecimal $!{entityName}PK = new java.math.BigDecimal(1);
#end
        System.out.println("-->"+$!{entityName}Service.delete$!{className}ByKey($!{entityName}PK));
    }

    @Test
    public void testDeleteBatch$!{className}ByKey() {
#if($!{keyFields.get(0).type} == "String")
        List<String> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add("1");
        $!{entityName}PKs.add("2");
#elseif($!{keyFields.get(0).type} == "Integer")
        List<Integer> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(1);
        $!{entityName}PKs.add(2);
#elseif($!{keyFields.get(0).type} == "Long")
        List<Long> ids = new ArrayList<>();
        $!{entityName}PKs.add(1L);
        $!{entityName}PKs.add(2L);
#elseif($!{keyFields.get(0).type} == "Float")
        List<Float> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(1F);
        $!{entityName}PKs.add(2F);
#elseif($!{keyFields.get(0).type} == "Double")
        List<Double> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(1D);
        $!{entityName}PKs.add(2D);
#elseif($!{keyFields.get(0).type} == "Date")
        List<Date> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add(new Date());
        $!{entityName}PKs.add(new Date());
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        List<java.math.BigDecimal> $!{entityName}PKs = new ArrayList<>();
        $!{entityName}PKs.add( new java.math.BigDecimal(1));
        $!{entityName}PKs.add( new java.math.BigDecimal(2));
#end
        System.out.println("-->"+$!{entityName}Service.deleteBatch$!{className}ByKey($!{entityName}PKs));
    }
#end

}
