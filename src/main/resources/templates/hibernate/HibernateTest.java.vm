package $!{classPackage}.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Date;

import com.alibaba.fastjson.JSON;

import $!{classPackage}.entity.$!{className};
#if($keyFields.size() > 1)
import $!{classPackage}.entity.$!{className}PK;
#end
import $!{classPackage}.service.$!{className}Service;
import $!{classPackage}.util.PageInfoUtil;

#if($!{frame.serviceFrame} == "SPRINGBOOT")
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
#elseif($!{frame.serviceFrame} == "SPRING")
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
#end

/**
 * $!{comment}数据持久层接口
 *
 * @author $!{authorName}
 * @email  $!{authorEmail}
 * @date   $!{createTime}
 */
#if($!{frame.serviceFrame} == "SPRINGBOOT")
@RunWith(SpringRunner.class)
@SpringBootTest
#elseif($!{frame.serviceFrame} == "SPRING")
@RunWith(SpringJUnit4ClassRunner.class)		// 表示继承了 SpringJUnit4ClassRunner 类
@ContextConfiguration(locations = {"classpath*:spring_core.xml","classpath:spring_hibernate.xml"})
#end
public class $!{className}Test {

    @Autowired
    $!{className}Service $!{entityName}Service;

    @Test
    public void testSave$!{className}() {
        $!{className} $!{entityName} = new $!{className}();
#foreach ($!{field} in $!{fields})
#if($!{field.type} == "String")
        $!{entityName}.set$!{field.filedName}("1");
#elseif($!{field.type} == "Date")
        $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}.set$!{field.filedName}(1);
#elseif($!{field.type} == "Long")
        $!{entityName}.set$!{field.filedName}(1L);
#elseif($!{field.type} == "Float")
        $!{entityName}.set$!{field.filedName}(1F);
#elseif($!{field.type} == "Double")
        $!{entityName}.set$!{field.filedName}(1D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(1));
#end
#end
        System.out.println("-->"+$!{entityName}Service.save$!{className}($!{entityName}));
    }

    @Test
    public void testSaveBatch$!{className}() {
        List<$!{className}> $!{entityName}List = new ArrayList<>();
        for(int i=2;i<5;i++) {
            $!{className} $!{entityName} = new $!{className}();
#foreach ($!{field} in $!{fields})
#if($!{field.type} == "String")
            $!{entityName}.set$!{field.filedName}(""+i);
#elseif($!{field.type} == "Date")
            $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
            $!{entityName}.set$!{field.filedName}(i);
#elseif($!{field.type} == "Long")
            $!{entityName}.set$!{field.filedName}((long)i);
#elseif($!{field.type} == "Float")
            $!{entityName}.set$!{field.filedName}((float)i);
#elseif($!{field.type} == "Double")
            $!{entityName}.set$!{field.filedName}((double)i);
#elseif($!{field.type} == "java.math.BigDecimal")
            $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(i));
#end
#end
            $!{entityName}List.add($!{entityName});
        }
        System.out.println("-->"+$!{entityName}Service.saveBatch$!{className}($!{entityName}List));
    }

#if($keyFields.size() > 1)
    @Test
    public void testDelete$!{className}ByKey() {
        $!{className}PK $!{entityName}PK = new $!{className}PK;
#foreach(${field} in ${keyFields})
#if($!{field.type} == "String")
        $!{entityName}PK.set$!{field.filedName}("1");
#elseif($!{field.type} == "Integer")
        $!{entityName}PK.set$!{field.filedName}(1);
#elseif($!{field.type} == "Long")
        $!{entityName}PK.set$!{field.filedName}(1L);
#elseif($!{field.type} == "Float")
        $!{entityName}PK.set$!{field.filedName}(1F);
#elseif($!{field.type} == "Double")
        $!{entityName}PK.set$!{field.filedName}(1D);
#elseif($!{field.type} == "Date")
        $!{entityName}PK.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}PK.set$!{field.filedName}(new java.math.BigDecimal(1));
#end
#end
        System.out.println("-->"+$!{entityName}Service.delete$!{className}ByKey($!{entityName}PK));
    }

#end
#if($keyFields.size() == 1)
    @Test
    public void testDelete$!{className}ByKey() {
        System.out.println("-->"+$!{entityName}Service.delete$!{className}ByKey(
#foreach(${field} in ${keyFields})
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
#end
        ));
    }

    @Test
    public void testDeleteBatch$!{className}ByKey() {
#if($!{keyFields.get(0).type} == "String")
        List<String> ids = new ArrayList<>();
        ids.add("1");
        ids.add("2");
#elseif($!{keyFields.get(0).type} == "Integer")
        List<Integer> ids = new ArrayList<>();
        ids.add(1);
        ids.add(2);
#elseif($!{keyFields.get(0).type} == "Long")
        List<Long> ids = new ArrayList<>();
        ids.add(1L);
        ids.add(2L);
#elseif($!{keyFields.get(0).type} == "Float")
        List<Float> ids = new ArrayList<>();
        ids.add(1F);
        ids.add(2F);
#elseif($!{keyFields.get(0).type} == "Double")
        List<Double> ids = new ArrayList<>();
        ids.add(1D);
        ids.add(2D);
#elseif($!{keyFields.get(0).type} == "Date")
        List<Date> ids = new ArrayList<>();
        ids.add(new Date());
        ids.add(new Date());
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        List<java.math.BigDecimal> ids = new ArrayList<>();
        ids.add( new java.math.BigDecimal(1));
        ids.add( new java.math.BigDecimal(2));
#end
        System.out.println("-->"+$!{entityName}Service.deleteBatch$!{className}ByKey(ids));
    }

#end
    @Test
    public void testUpdate$!{className}ByKey() {
        $!{className} $!{entityName} = new $!{className}();
#foreach ($!{field} in $!{keyFields})
#if($!{field.type} == "String")
        $!{entityName}.set$!{field.filedName}("1");
#elseif($!{field.type} == "Date")
        $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}.set$!{field.filedName}(1);
#elseif($!{field.type} == "Long")
        $!{entityName}.set$!{field.filedName}(1L);
#elseif($!{field.type} == "Float")
        $!{entityName}.set$!{field.filedName}(1F);
#elseif($!{field.type} == "Double")
        $!{entityName}.set$!{field.filedName}(1D);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(1));
#end
#end
#foreach ($!{field} in $!{noKeyFields})
#if($!{field.type} == "String")
        $!{entityName}.set$!{field.filedName}(""+6);
#elseif($!{field.type} == "Date")
        $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
        $!{entityName}.set$!{field.filedName}(1+5);
#elseif($!{field.type} == "Long")
        $!{entityName}.set$!{field.filedName}(1L+5);
#elseif($!{field.type} == "Float")
        $!{entityName}.set$!{field.filedName}(1F+5);
#elseif($!{field.type} == "Double")
        $!{entityName}.set$!{field.filedName}(1D+5);
#elseif($!{field.type} == "java.math.BigDecimal")
        $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(6));
#end
#end
        System.out.println("-->"+$!{entityName}Service.update$!{className}ByKey($!{entityName}));
    }

    @Test
    public void testUpdateBatch$!{className}ByKey() {
        List<$!{className}> $!{entityName}List = new ArrayList<>();
        for(int i=7;i<10;i++) {
            $!{className} $!{entityName} = new $!{className}();
#foreach ($!{field} in $!{keyFields})
#if($!{field.type} == "String")
            $!{entityName}.set$!{field.filedName}(""+(i-5));
#elseif($!{field.type} == "Date")
            $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
            $!{entityName}.set$!{field.filedName}(i-5);
#elseif($!{field.type} == "Long")
            $!{entityName}.set$!{field.filedName}((long)(i-5));
#elseif($!{field.type} == "Float")
            $!{entityName}.set$!{field.filedName}((float)(i-5));
#elseif($!{field.type} == "Double")
            $!{entityName}.set$!{field.filedName}((double)(i-5));
#elseif($!{field.type} == "java.math.BigDecimal")
            $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(i-5));
#end
#end
#foreach ($!{field} in $!{noKeyFields})
#if($!{field.type} == "String")
            $!{entityName}.set$!{field.filedName}(""+i);
#elseif($!{field.type} == "Date")
            $!{entityName}.set$!{field.filedName}(new Date());
#elseif($!{field.type} == "Integer")
            $!{entityName}.set$!{field.filedName}(i);
#elseif($!{field.type} == "Long")
            $!{entityName}.set$!{field.filedName}((long)i);
#elseif($!{field.type} == "Float")
            $!{entityName}.set$!{field.filedName}((float)i);
#elseif($!{field.type} == "Double")
            $!{entityName}.set$!{field.filedName}((double)i);
#elseif($!{field.type} == "java.math.BigDecimal")
            $!{entityName}.set$!{field.filedName}(new java.math.BigDecimal(i));
#end
#end
            $!{entityName}List.add($!{entityName});
        }
        System.out.println("-->"+$!{entityName}Service.updateBatch$!{className}ByKey($!{entityName}List));
    }

#if($keyFields.size() == 1)
    @Test
    public void testGet$!{className}ByKey() {
        System.out.println("-->"+$!{entityName}Service.get$!{className}ByKey(
#foreach(${field} in ${keyFields})
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
#end
        ));
    }

    @Test
    public void testList$!{className}ByKey() {
#if($!{keyFields.get(0).type} == "String")
        List<String> ids = new ArrayList<>();
        ids.add("1");
        ids.add("2");
#elseif($!{keyFields.get(0).type} == "Integer")
        List<Integer> ids = new ArrayList<>();
        ids.add(1);
        ids.add(2);
#elseif($!{keyFields.get(0).type} == "Long")
        List<Long> ids = new ArrayList<>();
        ids.add(1L);
        ids.add(2L);
#elseif($!{keyFields.get(0).type} == "Float")
        List<Float> ids = new ArrayList<>();
        ids.add(1F);
        ids.add(2F);
#elseif($!{keyFields.get(0).type} == "Double")
        List<Double> ids = new ArrayList<>();
        ids.add(1D);
        ids.add(2D);
#elseif($!{keyFields.get(0).type} == "Date")
        List<Date> ids = new ArrayList<>();
        ids.add(new Date());
        ids.add(new Date());
#elseif($!{keyFields.get(0).type} == "java.math.BigDecimal")
        List<java.math.BigDecimal> ids = new ArrayList<>();
        ids.add( new java.math.BigDecimal(1));
        ids.add( new java.math.BigDecimal(2));
#end
        System.out.println("-->"+$!{entityName}Service.list$!{className}ByKey(ids));
    }

#end
    @Test
    public void testList$!{className}() {
        System.out.println("-->"+$!{entityName}Service.list$!{className}());
    }

#foreach ($!{field} in $!{noKeyFields})
    @Test
    public void testFindBy$!{field.filedName}() {
        System.out.println("-->"+$!{entityName}Service.findBy$!{field.filedName}(
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
        ));
    }

    @Test
    public void testFindBy$!{field.filedName}Contains() {
        System.out.println("-->"+$!{entityName}Service.findBy$!{field.filedName}Contains(
        #if($!{field.type} == "String")
                "1"
        #elseif($!{field.type} == "Integer")
                1
        #elseif($!{field.type} == "Long")
            1L
        #elseif($!{field.type} == "Float")
            1F
        #elseif($!{field.type} == "Double")
            1D
        #elseif($!{field.type} == "Date")
            new Date()
        #elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
        #end
        , 1, 2));
    }

    @Test
    public void testDeleteBy$!{field.filedName}() {
        System.out.println("-->"+$!{entityName}Service.deleteBy$!{field.filedName}(
#if($!{field.type} == "String")
            "1"
#elseif($!{field.type} == "Integer")
            1
#elseif($!{field.type} == "Long")
            1L
#elseif($!{field.type} == "Float")
            1F
#elseif($!{field.type} == "Double")
            1D
#elseif($!{field.type} == "Date")
            new Date()
#elseif($!{field.type} == "java.math.BigDecimal")
            new java.math.BigDecimal(1)
#end
        ));
    }

#end
}
