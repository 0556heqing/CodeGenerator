package $!{classPackage}.repository;

import java.io.Serializable;
import java.util.List;

/**
 * 数据访问基础类
 *
 * @author $!{authorName}
 * @email  $!{authorEmail}
 * @date   $!{createTime}
 */
public interface AbstractRepository<T, PK extends Serializable> {

    /**
     * 增加$!{comment}
     *
     * @param entity $!{comment}列
     * @return int 成功数量
     */
    int save(T entity);

    /**
     * 增加多条$!{comment}
     *
     * @param entityList 多条$!{comment}列
     * @return int 成功数量
     */
    int saveBatch(List<T> entityList);

    /**
     * 根据主键删除$!{comment}
     *
     * @param pk $!{comment}列
     * @return int 成功数量
     */
    int delete(PK pk);

    /**
     * 根据多个主键删除$!{comment}
     *
     * @param pkList $!{comment}列
     * @return int 成功数量
     */
    int deleteBatch(List<PK> pkList);

    /**
     * 根据主键修改$!{comment}
     *
     * @param entity $!{comment}列
     * @return int 成功数量
     */
    int saveAndFlush(T entity);

    /**
     * 根据多个主键修改$!{comment}
     *
     * @param entityList $!{comment}列
     * @return int 成功数量
     */
    int saveAndFlushBatch(List<T> entityList);

    /**
     * 根据主键获取$!{comment}
     *
     * @param key 主键
     * @return int 成功数量
     */
    T getOne(PK key);

    /**
     * 根据多个主键获取多条$!{comment}
     *
     * @param keyList 主键集合
     * @return List<T> $!{comment}列信息
     */
    List<T> listByKey(List<PK> keyList);

}
