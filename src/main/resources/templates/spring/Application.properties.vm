server.context-path=/$!{projectName}
server.port=8080
server.session.timeout=10

# 数据源配置
spring.datasource.druid.url=jdbc:MySQL://$!{datebase.url}:$!{datebase.port}/$!{datebase.dbName}?characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.datasource.druid.driver-class-name=$!{datebase.driver}
spring.datasource.druid.username=$!{datebase.username}
spring.datasource.druid.password=$!{datebase.password}
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000

#if($!{frame.repositoryFrame} == "MYBATIS")
mybatis.type-aliases-package=$!{packageName}.repository
mybatis.mapper-locations=classpath*:$!{repositoryMapper}/repository/mapper/*.xml

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

logging.level.org.mybatis=error
#elseif($!{frame.repositoryFrame} == "HIBERNATE")
spring.jpa.database = MYSQL
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#end

#日志配置
logging.level.$!{packageName}=error
logging.level.org.springframework.web=error
logging.level.org.springframework.transaction=error

