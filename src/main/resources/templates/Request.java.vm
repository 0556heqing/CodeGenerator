package $!{classPackage}.controller.request;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.annotation.JSONField;
import $!{classPackage}.entity.$!{className};
#if($keyFields.size() > 1)
import $!{classPackage}.entity.$!{className}PK;
#end

/**
 * $!{comment}请求参数
 *
 * @author $!{authorName}
 * @email  $!{authorEmail}
 * @date   $!{createTime}
 */
public class $!{className}Request implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * pageNum 当前页
     */
    @JSONField(name="page_num")
    private int pageNum;

    /**
     * pageSize 每页的数量
     */
    @JSONField(name="page_size")
    private int pageSize;

#if($keyFields.size() > 1)
    /**
     * $!{entityName}PKs 主键类集合
     */
    @JSONField(name="$!{entityName}pk")
    List<$!{className}PK> $!{entityName}PKList = new ArrayList<>();

    public void set$!{className}PKList(List<$!{className}PK> $!{entityName}PKList) {
        this.$!{entityName}PKList = $!{entityName}PKList;
    }

    public List<$!{className}PK> get$!{className}PKList() {
        return $!{entityName}PKList;
    }

#end
#if($keyFields.size() == 1)
    /**
     * $!{keyFields.get(0).entityName}s 主键集合
     */
    List<$!{keyFields.get(0).type}> $!{keyFields.get(0).entityName}List = new ArrayList<>();

    public void set$!{keyFields.get(0).filedName}List(List<$!{keyFields.get(0).type}> $!{keyFields.get(0).entityName}List) {
        this.$!{keyFields.get(0).entityName}List = $!{keyFields.get(0).entityName}List;
    }

    public List<$!{keyFields.get(0).type}> get$!{keyFields.get(0).filedName}List() {
        return $!{keyFields.get(0).entityName}List;
    }

#end
#foreach ($!{field} in $!{fields})

    /**
     * $!{field.entityName} $!{field.comment}
     */
#if($!{field.type} == "Date")
    @JSONField(name="$!{field.columnName}", format="yyyy-MM-dd HH:mm:ss")
#else
    @JSONField(name="$!{field.columnName}")
#end
    private $!{field.type} $!{field.entityName};

#end
    public int getPageNum() {
        return pageNum;
    }

    public void setPageNum(int pageNum) {
        this.pageNum = pageNum;
    }

    public int getPageSize() {
        return pageSize;
    }

    public void setPageSize(int pageSize) {
        this.pageSize = pageSize;
    }

#foreach ($!{field} in $!{fields})
    public void set$!{field.filedName}($!{field.type} $!{field.entityName}) {
        this.$!{field.entityName} = $!{field.entityName};
    }

    public $!{field.type} get$!{field.filedName}() {
        return $!{field.entityName};
    }

#end
    @Override
    public String toString() {
        return JSONObject.toJSONString(this);
    }

    public $!{className} get$!{className}() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        $!{className} $!{entityName} = new $!{className}();
#if($!{frame.repositoryFrame} == "MYBATIS")
#foreach ($!{field} in $!{fields})
        $!{entityName}.set$!{field.filedName}(this.get$!{field.filedName}());
#end
#elseif($!{frame.repositoryFrame} == "HIBERNATE")
#if($keyFields.size() > 1)
        $!{className}PK $!{entityName}PK = new $!{className}PK();
#foreach ($!{field} in $!{keyFields})
        $!{entityName}PK.set$!{field.filedName}(this.get$!{field.filedName}());
#end
        $!{entityName}.set$!{className}PK($!{entityName}PK);
#elseif($keyFields.size() ==1)
        $!{entityName}.set$!{keyFields.get(0).filedName}(this.get$!{keyFields.get(0).filedName}());
#end
#foreach ($!{field} in $!{noKeyFields})
        $!{entityName}.set$!{field.filedName}(this.get$!{field.filedName}());
#end
#end
        return $!{entityName};
    }
}
